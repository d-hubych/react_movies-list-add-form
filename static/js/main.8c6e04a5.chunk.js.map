{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","onValidation","useState","uniqid","id","touched","setToched","hasError","hasValidError","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","urlValidator","url","test","invalidUrls","isDisabled","onSubmit","preventDefault","curent","handlerSubmit","disabled","callbackCopyMovies","App","moviesFromServer","setMovies","copyMovies","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c6e04a5.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport uniqid from 'uniqid';\n\ntype Props = {\n  name: string,\n  value: string,\n  label: string,\n  required?: boolean,\n  onChange: (newValue: string) => void,\n  onValidation?: (url: string) => boolean,\n};\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label,\n  required = false,\n  onChange,\n  onValidation = () => true,\n}) => {\n  const [id] = useState(uniqid(`${name}-`));\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value;\n  const hasValidError = value && !onValidation(value);\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {hasValidError && (\n        <p className=\"help is-danger\">{`${label} is not valid`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState, FormEvent } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const handlerSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const movie: Movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(movie);\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n    setCount((curent) => curent + 1);\n  };\n\n  const urlValidator = (url: string) => {\n    // eslint-disable-next-line\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n    return pattern.test(url);\n  };\n\n  const invalidUrls = !urlValidator(imgUrl) || !urlValidator(imdbUrl);\n  const isDisabled = !title || !imgUrl || !imdbUrl || !imdbId || invalidUrls;\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={(event => handlerSubmit(event))}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        onValidation={urlValidator}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        onValidation={urlValidator}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport { Movie } from './types/Movie';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nconst callbackCopyMovies = (movies: Movie[]) => {\n  return movies.map((movie: Movie) => ({ ...movie }));\n};\n\nexport const App = () => {\n  const [movies, setMovies] = useState(callbackCopyMovies(moviesFromServer));\n\n  const handlerNewMovie = (movie: Movie) => {\n    const copyMovies: Movie[] = callbackCopyMovies(movies);\n\n    copyMovies.push(movie);\n\n    setMovies(copyMovies);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={handlerNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}